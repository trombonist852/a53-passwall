
name: Build PassWall with OpenWrt SDK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  SDK_URL: https://downloads.openwrt.org/releases/21.02.3/targets/mvebu/cortexa53/openwrt-sdk-21.02.3-mvebu-cortexa53_gcc-8.4.0_musl.Linux-x86_64.tar.xz
  ARTIFACT_NAME: passwall-packages
  CONFIG_FILE: config/a53.config

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup environment
      run: |
        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext \
        genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev \
        libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev \
        libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf \
        python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion \
        swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
    
    - name: Download OpenWrt SDK
      run: |
        wget ${{ env.SDK_URL }} -O sdk.tar.xz
        mkdir -p openwrt
        tar -xvJf sdk.tar.xz -C openwrt --strip-components=1
        
    - name: Configure feeds
      run: |
        cd openwrt
        echo "src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall-packages.git;main" >> feeds.conf.default
        echo "src-git passwall https://github.com/xiaorouji/openwrt-passwall.git;main" >> feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Build PassWall
      run: |
        cd openwrt
        make defconfig
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        make package/luci-app-passwall/compile -j$(nproc) V=s
        
    - name: Organize files
      id: organizer
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
          mkdir -p ${{ github.workspace }}/dist/Packages
          cp -r -f ${{ github.workspace }}/openwrt/bin/packages/*/*/*.ipk ${{ github.workspace }}/dist/Packages/
          cd ${{ github.workspace }}/dist
          tar -czf a53.tar.gz Packages
          rm -rf Packages
          sha256sum `ls -1 | sort` > sha256sums
          echo "::set-output name=status::success"
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Archive artifacts
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ github.workspace }}/openwrt/bin/
